<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lomoye.hours.core.dao.ItemMapper">
    <sql id="condition">
        <where>
            <if test="condition.id != null">
                id = #{condition.id}
            </if>
            <if test="condition.userId != null">
                AND user_id = #{condition.userId}
            </if>
            <if test="condition.name != null">
                AND `name` = #{condition.name}
            </if>
            <if test="condition.isDelete != null">
                AND `is_delete` = #{condition.isDelete}
            </if>
        </where>
    </sql>

    <sql id="selectAllField">
        select id,user_id,`name`,`desc`,is_delete,create_time,modify_time from item
    </sql>

    <select id="selectWithPage" parameterType="Map" resultType="Item">
        <include refid="selectAllField"/>
        <include refid="condition"/>
        <include refid="com.lomoye.common.dao.paged"/>
    </select>

    <select id="selectByCondition" parameterType="Map" resultType="Item">
        <include refid="selectAllField"/>
        <include refid="condition"/>
        <include refid="com.lomoye.common.dao.orderby"/>
    </select>

    <select id="selectByPrimaryKey" parameterType="Long" resultType="Item">
        <include refid="selectAllField"/>
        where id=#{key}
    </select>

    <select id="selectOne" parameterType="Map" resultType="Item">
        <include refid="selectAllField"/>
        <include refid="condition"/>
        limit 1
    </select>

    <select id="selectCount" parameterType="Map" resultType="long">
        select count(*) from item
        <include refid="condition"/>
    </select>

    <insert id="insert" keyProperty="id" parameterType="Item">
        insert into item
        (user_id, `name`,`desc`, is_delete, create_time,modify_time)
        VALUES
        (#{userId},#{name},#{desc},#{isDelete},#{createTime},#{modifyTime})
    </insert>

    <update id="updateByPrimaryKey" parameterType="Item">
        update item set
        user_id=#{userId},
        `name`=#{name},
        `desc`=#{desc},
        is_delete=#{isDelete},
        modify_time=#{modifyTime},
        modify_time=#{modifyTime}
        where id=#{id}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="Long">
        delete from item
        where id = #{key}
    </delete>

    <delete id="deleteByCondition" parameterType="Map">
        delete from item
        <include refid="condition"/>
    </delete>


    <update id="logicallyDeleteById" parameterType="Map">
        UPDATE item SET
        is_delete=1
        WHERE id=#{id} AND user_id=#{userId}
    </update>
</mapper>